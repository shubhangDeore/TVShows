{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubhangi\\\\TVMaze_assignment\\\\src\\\\components\\\\ListOfShows.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useNavigation } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-grid-system\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ListOfShows() {\n  _s();\n  const [tvshowsArr, settvshowsArr] = useState([]);\n  const navigate = useNavigate();\n  let API = \"https://api.tvmaze.com/search/shows?q=all\";\n  const fetchtvmazeShows = async url => {\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      settvshowsArr(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchtvmazeShows(API);\n  }, []);\n  const openShowDetails = show => {\n    navigate(\"/showdetails\", {\n      state: {\n        show: show\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Shows :-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: tvshowsArr.map(tvshow => {\n        var _tvshow$show, _tvshow$show2, _tvshow$show2$image, _tvshow$show3, _tvshow$show3$image, _tvshow$show4, _tvshow$show4$image, _tvshow$show5;\n        return /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          md: 4,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              openShowDetails(tvshow === null || tvshow === void 0 ? void 0 : tvshow.show);\n            },\n            style: styles.mainDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                fontSize: 22\n              },\n              children: tvshow === null || tvshow === void 0 ? void 0 : (_tvshow$show = tvshow.show) === null || _tvshow$show === void 0 ? void 0 : _tvshow$show.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tvshow !== null && tvshow !== void 0 && (_tvshow$show2 = tvshow.show) !== null && _tvshow$show2 !== void 0 && (_tvshow$show2$image = _tvshow$show2.image) !== null && _tvshow$show2$image !== void 0 && _tvshow$show2$image.medium ? tvshow === null || tvshow === void 0 ? void 0 : (_tvshow$show3 = tvshow.show) === null || _tvshow$show3 === void 0 ? void 0 : (_tvshow$show3$image = _tvshow$show3.image) === null || _tvshow$show3$image === void 0 ? void 0 : _tvshow$show3$image.medium : tvshow === null || tvshow === void 0 ? void 0 : (_tvshow$show4 = tvshow.show) === null || _tvshow$show4 === void 0 ? void 0 : (_tvshow$show4$image = _tvshow$show4.image) === null || _tvshow$show4$image === void 0 ? void 0 : _tvshow$show4$image.original\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                openShowDetails(tvshow === null || tvshow === void 0 ? void 0 : tvshow.show);\n              },\n              style: styles.detailsBtn,\n              variant: \"contained\",\n              children: [\" \", \"View Details of \", tvshow === null || tvshow === void 0 ? void 0 : (_tvshow$show5 = tvshow.show) === null || _tvshow$show5 === void 0 ? void 0 : _tvshow$show5.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_s(ListOfShows, \"5BPhsUVq9Nfp8zvsPvIIGzz/t7I=\", false, function () {\n  return [useNavigate];\n});\n_c = ListOfShows;\nconst styles = {\n  mainDiv: {\n    fontSize: 22,\n    textAlign: \"center\",\n    fontFamily: \"Arial\",\n    maxWidth: \"550px\",\n    margin: \"0 auto\",\n    border: \"1px solid #e6e6e6\",\n    padding: \"40px 25px\",\n    marginTop: \"50px\",\n    cursor: \"pointer\"\n  },\n  detailsBtn: {\n    // margin: \"-90px auto 30px\",\n    // width: \"100px\",\n    // borderRadius: \"70%\",\n    objectFit: \"cover\",\n    backgroundColor: \"#3c948b\",\n    marginBottom: \"0\",\n    padding: 10,\n    color: \"white\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ListOfShows\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useNavigation","Container","Row","Col","Button","jsxDEV","_jsxDEV","ListOfShows","_s","tvshowsArr","settvshowsArr","navigate","API","fetchtvmazeShows","url","res","fetch","data","json","console","log","error","openShowDetails","show","state","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tvshow","_tvshow$show","_tvshow$show2","_tvshow$show2$image","_tvshow$show3","_tvshow$show3$image","_tvshow$show4","_tvshow$show4$image","_tvshow$show5","sm","md","lg","onClick","style","styles","mainDiv","fontSize","name","src","image","medium","original","detailsBtn","variant","_c","textAlign","fontFamily","maxWidth","margin","border","padding","marginTop","cursor","objectFit","backgroundColor","marginBottom","color","$RefreshReg$"],"sources":["C:/Users/Shubhangi/TVMaze_assignment/src/components/ListOfShows.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useNavigation } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-grid-system\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport function ListOfShows() {\r\n  const [tvshowsArr, settvshowsArr] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  let API = \"https://api.tvmaze.com/search/shows?q=all\";\r\n  const fetchtvmazeShows = async (url) => {\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      console.log(data);\r\n      settvshowsArr(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchtvmazeShows(API);\r\n  }, []);\r\n\r\n  const openShowDetails = (show) => {\r\n    navigate(\"/showdetails\", { state: { show: show } });\r\n  };\r\n\r\n  return (\r\n\r\n      <Container>\r\n      <h1>List of Shows :-</h1>\r\n\r\n        <Row>\r\n          {tvshowsArr.map((tvshow) => {\r\n            return (\r\n              <Col sm={4} md={4} lg={4}>\r\n                <div\r\n                  onClick={() => {\r\n                    openShowDetails(tvshow?.show);\r\n                  }}\r\n                  style={styles.mainDiv}\r\n                >\r\n                  <h1 style={{ fontSize: 22 }}>{tvshow?.show?.name}</h1>\r\n                  <img src={tvshow?.show?.image?.medium ? tvshow?.show?.image?.medium : tvshow?.show?.image?.original}></img>\r\n                  <Button\r\n                    onClick={() => {\r\n                      openShowDetails(tvshow?.show);\r\n                    }}\r\n                    style={styles.detailsBtn}\r\n                    variant=\"contained\"\r\n                  >\r\n                    {\" \"}\r\n                    View Details of {tvshow?.show?.name}\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  mainDiv: {\r\n    fontSize: 22,\r\n    textAlign: \"center\",\r\n   \r\n    fontFamily: \"Arial\",\r\n    maxWidth: \"550px\",\r\n    margin: \"0 auto\",\r\n    border: \"1px solid #e6e6e6\",\r\n    padding: \"40px 25px\",\r\n    marginTop: \"50px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  detailsBtn: {\r\n    // margin: \"-90px auto 30px\",\r\n    // width: \"100px\",\r\n    // borderRadius: \"70%\",\r\n    objectFit: \"cover\",\r\n    backgroundColor: \"#3c948b\",\r\n    marginBottom: \"0\",\r\n    padding: 10,\r\n    color: \"white\",\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}