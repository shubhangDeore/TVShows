[{"C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\index.js":"1","C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\App.js":"2","C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\reportWebVitals.js":"3","C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\components\\ShowDetails.js":"4","C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\components\\ListOfShows.js":"5"},{"size":535,"mtime":1691407840911,"results":"6","hashOfConfig":"7"},{"size":489,"mtime":1691471828017,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1691407841173,"results":"9","hashOfConfig":"7"},{"size":4415,"mtime":1691471720520,"results":"10","hashOfConfig":"7"},{"size":2394,"mtime":1691471883808,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"drosfv",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\index.js",[],[],"C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\App.js",[],[],"C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\reportWebVitals.js",[],[],"C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\components\\ShowDetails.js",["29","30","31"],[],"import { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Col, Row } from \"react-grid-system\";\r\nimport { Card, Container } from \"@mui/material\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nexport function ShowDetails() {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const renderGenres = (itemList) =>\r\n    itemList.map((item, index) => (\r\n      <span>\r\n        {\" \"}\r\n        {item} {itemList.length - 1 == index ? \"\" : \"|\"}{\" \"}\r\n      </span>\r\n    ));\r\n\r\n  const ratingChanged = () => {};\r\n\r\n  return (\r\n    <Container style={Style.mainContainer}>\r\n      <Link to=\"/\">\r\n        <ArrowBackIosIcon style={Style.backBtn} />\r\n      </Link>\r\n\r\n      <Row>\r\n        <Col sm={3} md={3} lg={3}>\r\n          <div style={Style.detail_img}>\r\n            <img src={location.state.show?.image?.medium}></img>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col sm={5} md={5} lg={5}>\r\n          <div>\r\n            <p style={Style.showSummary}>\r\n              {location.state.show.summary.replace(/<[^>]+>/g, \"\")}\r\n            </p>\r\n          </div>\r\n        </Col>\r\n        <Col sm={4} md={4} lg={4}>\r\n          <Card variant=\"outlined\" style={Style.card}>\r\n            <p style={Style.showInfo}> Show info: </p>\r\n\r\n            <div style={Style.cardBody}>\r\n              <span style={{ fontWeight: \"bold\" }}>Network:</span>\r\n              &nbsp; {location.state.show.network?.country?.name} &nbsp;\r\n              <span>(</span>\r\n              {location.state.show.network?.country?.timezone}\r\n              <span>)</span>\r\n            </div>\r\n            <div style={Style.cardBody}>\r\n              <span style={{ fontWeight: \"bold\" }}>Schedule:</span>\r\n              &nbsp; {location.state.show.schedule.time}{\" \"}\r\n              {location.state.show.schedule.days[0]}\r\n            </div>\r\n            <div style={Style.cardBody}>\r\n              <span style={{ fontWeight: \"bold\" }}> status:</span>\r\n              &nbsp; {location.state.show.status}\r\n            </div>\r\n            <div style={Style.cardBody}>\r\n              <span style={{ fontWeight: \"bold\" }}> Show Type:</span>\r\n              &nbsp; {location.state.show.type}\r\n            </div>\r\n            <div style={Style.cardBody}>\r\n              <span style={{ fontWeight: \"bold\" }}>Genres:</span>\r\n              {renderGenres(location.state?.show?.genres)}\r\n            </div>\r\n            <div style={Style.cardBody}>\r\n              <span style={{ fontWeight: \"bold\" }}>Episodes ordered:</span>\r\n              &nbsp; N.A.\r\n            </div>\r\n            <div style={Style.cardBody}>\r\n              <span style={{ fontWeight: \"bold\" }}>Official Site: </span>\r\n              &nbsp;\r\n              <a href={location.state.show.officialSite}>\r\n                {\" \"}\r\n                {location.state.show.officialSite}\r\n              </a>\r\n            </div>\r\n            <div style={Style.ratingMainDiv}>\r\n              <Row>\r\n                <Col md={6} lg={6}>\r\n                  <ReactStars\r\n                    count={location.state.show?.rating?.average}\r\n                    onChange={ratingChanged}\r\n                    size={24}\r\n                    activeColor=\"#ffd700\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <div style={Style.ratingDiv}>\r\n                    {location.state.show?.rating?.average}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Style = {\r\n  mainContainer: { flex: 1, padding: 40 },\r\n  backBtn: { color: \"#3c948b\" },\r\n  detailstyle: {\r\n    fontSize: 22,\r\n    textAlign: \"center\",\r\n\r\n    fontFamily: \"Arial\",\r\n\r\n    margin: \"0 auto\",\r\n\r\n    padding: \"40px 25px\",\r\n  },\r\n  detail_styles: {\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  detail_img: {\r\n    border: \"10px solid transparent\",\r\n    padding: \"15px\",\r\n  },\r\n  showInfo: {\r\n    fontSize: 32,\r\n    fontWeight: \"normal\",\r\n    margin: 0,\r\n    marginBottom: 15,\r\n  },\r\n  card: { padding: 10, lineHeight: 1.5, background: \"#f7f7f7\" },\r\n  showSummary: { fontFamily: \"helvetica\", lineHeight: 1.6 },\r\n  ratingDiv: { fontWeight: \"bold\", marginTop: 4 },\r\n  ratingMainDiv: { flex: 1, flexDirection: \"row\" },\r\n};\r\n","C:\\Users\\Shubhangi\\TVMaze_assignment\\src\\components\\ListOfShows.js",["32","33","34"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useNavigation } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-grid-system\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport function ListOfShows() {\r\n  const [tvshowsArr, settvshowsArr] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  let API = \"https://api.tvmaze.com/search/shows?q=all\";\r\n  const fetchtvmazeShows = async (url) => {\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      console.log(data);\r\n      settvshowsArr(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchtvmazeShows(API);\r\n  }, []);\r\n\r\n  const openShowDetails = (show) => {\r\n    navigate(\"/showdetails\", { state: { show: show } });\r\n  };\r\n\r\n  return (\r\n\r\n      <Container>\r\n      <h1>List of Shows :-</h1>\r\n\r\n        <Row>\r\n          {tvshowsArr.map((tvshow) => {\r\n            return (\r\n              <Col sm={4} md={4} lg={4}>\r\n                <div\r\n                  onClick={() => {\r\n                    openShowDetails(tvshow?.show);\r\n                  }}\r\n                  style={styles.mainDiv}\r\n                >\r\n                  <h1 style={{ fontSize: 22 }}>{tvshow?.show?.name}</h1>\r\n                  <img src={tvshow?.show?.image?.medium ? tvshow?.show?.image?.medium : tvshow?.show?.image?.original}></img>\r\n                  <Button\r\n                    onClick={() => {\r\n                      openShowDetails(tvshow?.show);\r\n                    }}\r\n                    style={styles.detailsBtn}\r\n                    variant=\"contained\"\r\n                  >\r\n                    {\" \"}\r\n                    View Details of {tvshow?.show?.name}\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  mainDiv: {\r\n    fontSize: 22,\r\n    textAlign: \"center\",\r\n   \r\n    fontFamily: \"Arial\",\r\n    maxWidth: \"550px\",\r\n    margin: \"0 auto\",\r\n    border: \"1px solid #e6e6e6\",\r\n    padding: \"40px 25px\",\r\n    marginTop: \"50px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  detailsBtn: {\r\n    // margin: \"-90px auto 30px\",\r\n    // width: \"100px\",\r\n    // borderRadius: \"70%\",\r\n    objectFit: \"cover\",\r\n    backgroundColor: \"#3c948b\",\r\n    marginBottom: \"0\",\r\n    padding: 10,\r\n    color: \"white\",\r\n  },\r\n};\r\n",{"ruleId":"35","severity":1,"message":"36","line":2,"column":17,"nodeType":"37","messageId":"38","endLine":2,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":17,"column":37,"nodeType":"41","messageId":"42","endLine":17,"endColumn":39},{"ruleId":"43","severity":1,"message":"44","line":32,"column":13,"nodeType":"45","endLine":32,"endColumn":59},{"ruleId":"35","severity":1,"message":"46","line":2,"column":23,"nodeType":"37","messageId":"38","endLine":2,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":24,"column":6,"nodeType":"49","endLine":24,"endColumn":8,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"44","line":46,"column":19,"nodeType":"45","endLine":46,"endColumn":120},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useNavigation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'API'. Either include it or remove the dependency array.","ArrayExpression",["51"],{"desc":"52","fix":"53"},"Update the dependencies array to be: [API]",{"range":"54","text":"55"},[703,705],"[API]"]